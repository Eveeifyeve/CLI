name: Publish CLI
on:
  push:
    branches:
      - 'stable'
      - 'alpha'
      - 'beta'
    tags:
      - 'v*'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Run compile script
        run: python compile.py
        
      - name: Verify compiled files
        run: |
          if [ ! -f dist/eve ]; then
            echo "Error: eve executable not found."
            exit  1
          fi
          if [ ! -f dist/eve.ps1 ]; then
            echo "Error: eve.ps1 script not found."
            exit  1
          fi
          if [ ! -f dist/eve.pyc ]; then
            echo "Error: eve.pyc bytecode not found."
            exit  1
          fi
          echo "All compiled files are present."

  publish:
    name: Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/eve
          asset_name: eve
          asset_content_type: application/octet-stream
          
      - name: Upload Release Asset
        id: upload-release-asset-ps1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/eve.ps1
          asset_name: eve.ps1
          asset_content_type: application/octet-stream
          
      - name: Upload Release Asset
        id: upload-release-asset-pyc
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/eve.pyc
          asset_name: eve.pyc
          asset_content_type: application/octet-stream