name: Build CLI Artifacts

on:
 push:
    branches:
      - Stable

jobs:
 check_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install rust-fmt
        run: rustup component add rustfmt
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --quiet
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --quiet
      - name: Check Rust formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check --quiet

 build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install rust-fmt
        run: rustup component add rustfmt
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin eve
      - name: Package (Windows)
        shell: powershell
        run: |
          if (${{ matrix.os }} -eq "ubuntu-latest" -or ${{ matrix.os }} -eq "macos-latest") {
            tar -czvf eve-${{ matrix.os }}.tar.gz -C target/release/ eve
          } elseif (${{ matrix.os }} -eq "windows-latest") {
            Compress-Archive -Path target\release\eve.exe -DestinationPath eve-${{ matrix.os }}.zip
          }
      - name: Package (Linux/macOS)
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" || "${{ matrix.os }}" == "macos-latest" ]]; then
          tar -czvf eve-${{ matrix.os }}.tar.gz -C target/release/ eve
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            Compress-Archive -Path target\release\eve.exe -DestinationPath eve-${{ matrix.os }}.zip
          fi
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: eve-${{ matrix.os }}
          path: |
            target/release/eve*
            eve-${{ matrix.os }}.tar.gz
            eve-${{ matrix.os }}.zip